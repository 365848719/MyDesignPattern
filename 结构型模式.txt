四、结构型模式

结构型模式，顾名思义讨论的是类和对象的结构 ，主要用来处理类或对象的组合。

它包括两种类型，

一是类结构型模式，指的是采用继承机制来组合接口或实现；
二是对象结构型模式，指的是通过组合对象的方式来实现新的功能。


它包括适配器模式、桥接模式、装饰者模式、组合模式、外观模式、享元模式和代理模式。


•适配器模式：注重转换接口，将不吻合的接口适配对接 
•桥接模式：注重分离接口与其实现，支持多维度变化 
•组合模式：注重统一接口，将“一对多”的关系转化为“一对一”的关系 
•装饰者模式：注重稳定接口，在此前提下为对象扩展功能 
•外观模式：注重简化接口，简化组件系统与外部客户程序的依赖关系 （常用）
•享元模式：注重保留接口，在内部使用共享技术对对象存储进行优化 
•代理模式：注重假借接口，增加间接层来实现灵活控制


常用：
1、适配器模式
2、外观模式

========================================================================

代理模式和装饰模式的区别：

然而，实际上，在装饰器模式和代理模式之间还是有很多差别的。
装饰器模式关注于在一个对象上动态的添加方法，然而代理模式关注于控制对对象的访问。

换句话 说，用代理模式，代理类（proxy class）可以对它的客户隐藏一个对象的具体信息。
因此，当使用代理模式的时候，我们常常在一个代理类中创建一个对象的实例。
并且，当我们使用装饰器模 式的时候，我们通常的做法是将原始对象作为一个参数传给装饰者的构造器。

我们可以用另外一句话来总结这些差别：使用代理模式，代理和真实对象之间的的关系通常在编译时就已经确定了，而装饰者能够在运行时递归地被构造。    